{
  "nodes": [
    {
      "id": "supervisor_0",
      "position": {
        "x": 142.87023764464328,
        "y": -1505.9090860907163
      },
      "type": "customNode",
      "data": {
        "id": "supervisor_0",
        "label": "Supervisor",
        "version": 3,
        "name": "supervisor",
        "type": "Supervisor",
        "baseClasses": [
          "Supervisor"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Supervisor Name",
            "name": "supervisorName",
            "type": "string",
            "placeholder": "Supervisor",
            "default": "Supervisor",
            "id": "supervisor_0-input-supervisorName-string"
          },
          {
            "label": "Supervisor Prompt",
            "name": "supervisorPrompt",
            "type": "string",
            "description": "Prompt must contains {team_members}",
            "rows": 4,
            "default": "You are a supervisor tasked with managing a conversation between the following workers: {team_members}.\nGiven the following user request, respond with the worker to act next.\nEach worker will perform a task and respond with their results and status.\nWhen finished, respond with FINISH.\nSelect strategically to minimize the number of steps taken.",
            "additionalParams": true,
            "id": "supervisor_0-input-supervisorPrompt-string"
          },
          {
            "label": "Summarization",
            "name": "summarization",
            "type": "boolean",
            "description": "Return final output as a summarization of the conversation",
            "optional": true,
            "additionalParams": true,
            "id": "supervisor_0-input-summarization-boolean"
          },
          {
            "label": "Recursion Limit",
            "name": "recursionLimit",
            "type": "number",
            "description": "Maximum number of times a call can recurse. If not provided, defaults to 100.",
            "default": 100,
            "additionalParams": true,
            "id": "supervisor_0-input-recursionLimit-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, GroqChat. Best result with GPT-4 model",
            "id": "supervisor_0-input-model-BaseChatModel"
          },
          {
            "label": "Agent Memory",
            "name": "agentMemory",
            "type": "BaseCheckpointSaver",
            "description": "Save the state of the agent",
            "optional": true,
            "id": "supervisor_0-input-agentMemory-BaseCheckpointSaver"
          },
          {
            "label": "Input Moderation",
            "description": "Detect text that could generate harmful output and prevent it from being sent to the language model",
            "name": "inputModeration",
            "type": "Moderation",
            "optional": true,
            "list": true,
            "id": "supervisor_0-input-inputModeration-Moderation"
          }
        ],
        "inputs": {
          "supervisorName": "SupervisorAgent",
          "supervisorPrompt": "You are the Supervisor Agent overseeing a document review process. Coordinate the work of five Worker Agents (Grammar, Structure, Accessibility, Formatting, and Citation) who will review the document and provide suggestions. Compile their suggestions into a clear, concise list, organized by category. Once you have collected all suggestions, pass them directly to the Final Edit Agent for implementation. Your output should be a numbered list of suggestions from each Worker Agent, categorized by the type of change (Grammar, Structure, Accessibility, Formatting, Citation).\n\nyou also have access to crawlworker. if user pastes any link then ask crawlworker to extract information and present to the user.",
          "model": "{{chatTogetherAI_0.data.instance}}",
          "agentMemory": "{{agentMemory_0.data.instance}}",
          "summarization": "",
          "recursionLimit": "30",
          "inputModeration": ""
        },
        "outputAnchors": [
          {
            "id": "supervisor_0-output-supervisor-Supervisor",
            "name": "supervisor",
            "label": "Supervisor",
            "description": "",
            "type": "Supervisor"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 486,
      "selected": false,
      "dragging": false,
      "positionAbsolute": {
        "x": 142.87023764464328,
        "y": -1505.9090860907163
      }
    },
    {
      "id": "agentMemory_0",
      "position": {
        "x": -1326.3694946911294,
        "y": -1345.3923483910723
      },
      "type": "customNode",
      "data": {
        "id": "agentMemory_0",
        "label": "Agent Memory",
        "version": 1,
        "name": "agentMemory",
        "type": "AgentMemory",
        "baseClasses": [
          "AgentMemory",
          "BaseCheckpointSaver"
        ],
        "category": "Memory",
        "description": "Memory for agentflow to remember the state of the conversation",
        "inputParams": [
          {
            "label": "Database",
            "name": "databaseType",
            "type": "options",
            "options": [
              {
                "label": "SQLite",
                "name": "sqlite"
              }
            ],
            "default": "sqlite",
            "id": "agentMemory_0-input-databaseType-options"
          },
          {
            "label": "Database File Path",
            "name": "databaseFilePath",
            "type": "string",
            "placeholder": "C:\\Users\\User\\.flowise\\database.sqlite",
            "description": "If SQLite is selected, provide the path to the SQLite database file. Leave empty to use default application database",
            "additionalParams": true,
            "optional": true,
            "id": "agentMemory_0-input-databaseFilePath-string"
          },
          {
            "label": "Additional Connection Configuration",
            "name": "additionalConfig",
            "type": "json",
            "additionalParams": true,
            "optional": true,
            "id": "agentMemory_0-input-additionalConfig-json"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "databaseType": "sqlite",
          "databaseFilePath": "",
          "additionalConfig": ""
        },
        "outputAnchors": [
          {
            "id": "agentMemory_0-output-agentMemory-AgentMemory|BaseCheckpointSaver",
            "name": "agentMemory",
            "label": "AgentMemory",
            "description": "Memory for agentflow to remember the state of the conversation",
            "type": "AgentMemory | BaseCheckpointSaver"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 331,
      "selected": false,
      "dragging": false,
      "positionAbsolute": {
        "x": -1326.3694946911294,
        "y": -1345.3923483910723
      }
    },
    {
      "id": "worker_0",
      "position": {
        "x": -1549.6070150434082,
        "y": -56.821278880460454
      },
      "type": "customNode",
      "data": {
        "id": "worker_0",
        "label": "Worker",
        "version": 2,
        "name": "worker",
        "type": "Worker",
        "baseClasses": [
          "Worker"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Worker Name",
            "name": "workerName",
            "type": "string",
            "placeholder": "Worker",
            "id": "worker_0-input-workerName-string"
          },
          {
            "label": "Worker Prompt",
            "name": "workerPrompt",
            "type": "string",
            "rows": 4,
            "default": "You are a research assistant who can search for up-to-date info using search engine.",
            "id": "worker_0-input-workerPrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "worker_0-input-promptValues-json"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "id": "worker_0-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "optional": true,
            "id": "worker_0-input-tools-Tool"
          },
          {
            "label": "Supervisor",
            "name": "supervisor",
            "type": "Supervisor",
            "id": "worker_0-input-supervisor-Supervisor"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "optional": true,
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat. If not specified, supervisor's model will be used",
            "id": "worker_0-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "workerName": "AccessibilityReviewAgent",
          "workerPrompt": "You are the Accessibility Review Agent in a document review workflow. Use the RAG retriever tool to access relevant Australian Government styling guidelines. Review the given document for accessibility issues, ensuring it's usable by people with various disabilities. Provide concise, specific suggestions for improvements based on the retrieved guidelines. Do not make any direct modifications to the document. Format your suggestions as a numbered list, with each item containing the issue, location, suggestion, and guideline reference. Send your list of suggestions to the Supervisor Agent. write very concise suggeetion. not more than 5",
          "tools": [
            "{{retrieverTool_0.data.instance}}"
          ],
          "supervisor": "{{supervisor_0.data.instance}}",
          "model": "{{chatTogetherAI_0.data.instance}}",
          "promptValues": "",
          "maxIterations": "15"
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 724,
      "selected": false,
      "positionAbsolute": {
        "x": -1549.6070150434082,
        "y": -56.821278880460454
      },
      "dragging": false
    },
    {
      "id": "openAIEmbeddings_0",
      "position": {
        "x": -1658.0774624667538,
        "y": 782.2692368128398
      },
      "type": "customNode",
      "data": {
        "id": "openAIEmbeddings_0",
        "label": "OpenAI Embeddings",
        "version": 4,
        "name": "openAIEmbeddings",
        "type": "OpenAIEmbeddings",
        "baseClasses": [
          "OpenAIEmbeddings",
          "Embeddings"
        ],
        "category": "Embeddings",
        "description": "OpenAI API to generate embeddings for a given text",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "openAIEmbeddings_0-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "default": "text-embedding-ada-002",
            "id": "openAIEmbeddings_0-input-modelName-asyncOptions"
          },
          {
            "label": "Strip New Lines",
            "name": "stripNewLines",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-stripNewLines-boolean"
          },
          {
            "label": "Batch Size",
            "name": "batchSize",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-batchSize-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-timeout-number"
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-basepath-string"
          },
          {
            "label": "Dimensions",
            "name": "dimensions",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_0-input-dimensions-number"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "modelName": "text-embedding-3-small",
          "stripNewLines": "",
          "batchSize": "",
          "timeout": "",
          "basepath": "",
          "dimensions": ""
        },
        "outputAnchors": [
          {
            "id": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "name": "openAIEmbeddings",
            "label": "OpenAIEmbeddings",
            "description": "OpenAI API to generate embeddings for a given text",
            "type": "OpenAIEmbeddings | Embeddings"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 427,
      "selected": false,
      "positionAbsolute": {
        "x": -1658.0774624667538,
        "y": 782.2692368128398
      },
      "dragging": false
    },
    {
      "id": "memoryVectorStore_0",
      "position": {
        "x": -1299.991604665686,
        "y": 1385.7645454238736
      },
      "type": "customNode",
      "data": {
        "id": "memoryVectorStore_0",
        "label": "In-Memory Vector Store",
        "version": 1,
        "name": "memoryVectorStore",
        "type": "Memory",
        "baseClasses": [
          "Memory",
          "VectorStoreRetriever",
          "BaseRetriever"
        ],
        "category": "Vector Stores",
        "description": "In-memory vectorstore that stores embeddings and does an exact, linear search for the most similar embeddings.",
        "inputParams": [
          {
            "label": "Top K",
            "name": "topK",
            "description": "Number of top results to fetch. Default to 4",
            "placeholder": "4",
            "type": "number",
            "optional": true,
            "id": "memoryVectorStore_0-input-topK-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Document",
            "name": "document",
            "type": "Document",
            "list": true,
            "optional": true,
            "id": "memoryVectorStore_0-input-document-Document"
          },
          {
            "label": "Embeddings",
            "name": "embeddings",
            "type": "Embeddings",
            "id": "memoryVectorStore_0-input-embeddings-Embeddings"
          }
        ],
        "inputs": {
          "document": [
            "{{pdfFile_0.data.instance}}"
          ],
          "embeddings": "{{openAIEmbeddings_0.data.instance}}",
          "topK": "3"
        },
        "outputAnchors": [
          {
            "name": "output",
            "label": "Output",
            "type": "options",
            "description": "",
            "options": [
              {
                "id": "memoryVectorStore_0-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
                "name": "retriever",
                "label": "Memory Retriever",
                "description": "",
                "type": "Memory | VectorStoreRetriever | BaseRetriever"
              },
              {
                "id": "memoryVectorStore_0-output-vectorStore-Memory|VectorStore",
                "name": "vectorStore",
                "label": "Memory Vector Store",
                "description": "",
                "type": "Memory | VectorStore"
              }
            ],
            "default": "retriever"
          }
        ],
        "outputs": {
          "output": "retriever"
        },
        "selected": false
      },
      "width": 300,
      "height": 409,
      "selected": false,
      "positionAbsolute": {
        "x": -1299.991604665686,
        "y": 1385.7645454238736
      },
      "dragging": false
    },
    {
      "id": "pdfFile_0",
      "position": {
        "x": -1715.9756174471622,
        "y": 1360.520455280113
      },
      "type": "customNode",
      "data": {
        "id": "pdfFile_0",
        "label": "Pdf File",
        "version": 1,
        "name": "pdfFile",
        "type": "Document",
        "baseClasses": [
          "Document"
        ],
        "category": "Document Loaders",
        "description": "Load data from PDF files",
        "inputParams": [
          {
            "label": "Pdf File",
            "name": "pdfFile",
            "type": "file",
            "fileType": ".pdf",
            "id": "pdfFile_0-input-pdfFile-file"
          },
          {
            "label": "Usage",
            "name": "usage",
            "type": "options",
            "options": [
              {
                "label": "One document per page",
                "name": "perPage"
              },
              {
                "label": "One document per file",
                "name": "perFile"
              }
            ],
            "default": "perPage",
            "id": "pdfFile_0-input-usage-options"
          },
          {
            "label": "Use Legacy Build",
            "name": "legacyBuild",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_0-input-legacyBuild-boolean"
          },
          {
            "label": "Additional Metadata",
            "name": "metadata",
            "type": "json",
            "description": "Additional metadata to be added to the extracted documents",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_0-input-metadata-json"
          },
          {
            "label": "Omit Metadata Keys",
            "name": "omitMetadataKeys",
            "type": "string",
            "rows": 4,
            "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
            "placeholder": "key1, key2, key3.nestedKey1",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_0-input-omitMetadataKeys-string"
          }
        ],
        "inputAnchors": [
          {
            "label": "Text Splitter",
            "name": "textSplitter",
            "type": "TextSplitter",
            "optional": true,
            "id": "pdfFile_0-input-textSplitter-TextSplitter"
          }
        ],
        "inputs": {
          "textSplitter": "{{recursiveCharacterTextSplitter_0.data.instance}}",
          "usage": "perPage",
          "legacyBuild": "",
          "metadata": "",
          "omitMetadataKeys": ""
        },
        "outputAnchors": [
          {
            "id": "pdfFile_0-output-pdfFile-Document",
            "name": "pdfFile",
            "label": "Document",
            "description": "Load data from PDF files",
            "type": "Document"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 512,
      "selected": false,
      "positionAbsolute": {
        "x": -1715.9756174471622,
        "y": 1360.520455280113
      },
      "dragging": false
    },
    {
      "id": "recursiveCharacterTextSplitter_0",
      "position": {
        "x": -2256.7342176129364,
        "y": 1423.7738683653404
      },
      "type": "customNode",
      "data": {
        "id": "recursiveCharacterTextSplitter_0",
        "label": "Recursive Character Text Splitter",
        "version": 2,
        "name": "recursiveCharacterTextSplitter",
        "type": "RecursiveCharacterTextSplitter",
        "baseClasses": [
          "RecursiveCharacterTextSplitter",
          "TextSplitter",
          "BaseDocumentTransformer",
          "Runnable"
        ],
        "category": "Text Splitters",
        "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
        "inputParams": [
          {
            "label": "Chunk Size",
            "name": "chunkSize",
            "type": "number",
            "description": "Number of characters in each chunk. Default is 1000.",
            "default": 1000,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_0-input-chunkSize-number"
          },
          {
            "label": "Chunk Overlap",
            "name": "chunkOverlap",
            "type": "number",
            "description": "Number of characters to overlap between chunks. Default is 200.",
            "default": 200,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_0-input-chunkOverlap-number"
          },
          {
            "label": "Custom Separators",
            "name": "separators",
            "type": "string",
            "rows": 4,
            "description": "Array of custom separators to determine when to split the text, will override the default separators",
            "placeholder": "[\"|\", \"##\", \">\", \"-\"]",
            "additionalParams": true,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_0-input-separators-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "chunkSize": "1000",
          "chunkOverlap": "",
          "separators": ""
        },
        "outputAnchors": [
          {
            "id": "recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
            "name": "recursiveCharacterTextSplitter",
            "label": "RecursiveCharacterTextSplitter",
            "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
            "type": "RecursiveCharacterTextSplitter | TextSplitter | BaseDocumentTransformer | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 433,
      "selected": false,
      "positionAbsolute": {
        "x": -2256.7342176129364,
        "y": 1423.7738683653404
      },
      "dragging": false
    },
    {
      "id": "worker_1",
      "position": {
        "x": 2541.742822064898,
        "y": -1583.6088823451973
      },
      "type": "customNode",
      "data": {
        "id": "worker_1",
        "label": "Worker",
        "version": 2,
        "name": "worker",
        "type": "Worker",
        "baseClasses": [
          "Worker"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Worker Name",
            "name": "workerName",
            "type": "string",
            "placeholder": "Worker",
            "id": "worker_1-input-workerName-string"
          },
          {
            "label": "Worker Prompt",
            "name": "workerPrompt",
            "type": "string",
            "rows": 4,
            "default": "You are a research assistant who can search for up-to-date info using search engine.",
            "id": "worker_1-input-workerPrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "worker_1-input-promptValues-json"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "id": "worker_1-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "optional": true,
            "id": "worker_1-input-tools-Tool"
          },
          {
            "label": "Supervisor",
            "name": "supervisor",
            "type": "Supervisor",
            "id": "worker_1-input-supervisor-Supervisor"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "optional": true,
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat. If not specified, supervisor's model will be used",
            "id": "worker_1-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "workerName": "FinalEditAgent",
          "workerPrompt": "You are the Final Edit Agent in a document review workflow. Implement all changes suggested by the other agents and compiled by the Supervisor Agent. Make direct modifications to the document based on these suggestions. Provide three outputs:\n\nThe original, unmodified document in its entirety.\nThe complete final, modified document with all suggested changes implemented. Present this as the full text of the document, showing all modifications.\nA concise summary of all changes made, organized by change type (Grammar, Structure, Accessibility, Formatting, Citation). Each change should include a brief description and the location in the document.\n\nBe thorough in your implementation and clear in your summary. Ensure all changes are accurately applied and reported. Present the original and modified documents in full to allow for easy comparison.",
          "tools": "",
          "supervisor": "{{supervisor_0.data.instance}}",
          "model": "{{chatTogetherAI_0.data.instance}}",
          "promptValues": "",
          "maxIterations": ""
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 724,
      "selected": false,
      "dragging": false,
      "positionAbsolute": {
        "x": 2541.742822064898,
        "y": -1583.6088823451973
      }
    },
    {
      "id": "retrieverTool_0",
      "position": {
        "x": -2127.250843382461,
        "y": 724.0822144245761
      },
      "type": "customNode",
      "data": {
        "id": "retrieverTool_0",
        "label": "Retriever Tool",
        "version": 2,
        "name": "retrieverTool",
        "type": "RetrieverTool",
        "baseClasses": [
          "RetrieverTool",
          "DynamicTool",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Use a retriever as allowed tool for agent",
        "inputParams": [
          {
            "label": "Retriever Name",
            "name": "name",
            "type": "string",
            "placeholder": "search_state_of_union",
            "id": "retrieverTool_0-input-name-string"
          },
          {
            "label": "Retriever Description",
            "name": "description",
            "type": "string",
            "description": "When should agent uses to retrieve documents",
            "rows": 3,
            "placeholder": "Searches and returns documents regarding the state-of-the-union.",
            "id": "retrieverTool_0-input-description-string"
          },
          {
            "label": "Return Source Documents",
            "name": "returnSourceDocuments",
            "type": "boolean",
            "optional": true,
            "id": "retrieverTool_0-input-returnSourceDocuments-boolean"
          }
        ],
        "inputAnchors": [
          {
            "label": "Retriever",
            "name": "retriever",
            "type": "BaseRetriever",
            "id": "retrieverTool_0-input-retriever-BaseRetriever"
          }
        ],
        "inputs": {
          "name": "AccessibilityRetriever",
          "description": "The AccessibilityRetriever provides guidelines on making content inclusive and accessible, including WCAG standards and best practices for accessible language. Use it to suggest improvements, but do not modify the content.\n",
          "retriever": "{{memoryVectorStore_0.data.instance}}",
          "returnSourceDocuments": ""
        },
        "outputAnchors": [
          {
            "id": "retrieverTool_0-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable",
            "name": "retrieverTool",
            "label": "RetrieverTool",
            "description": "Use a retriever as allowed tool for agent",
            "type": "RetrieverTool | DynamicTool | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 605,
      "selected": false,
      "positionAbsolute": {
        "x": -2127.250843382461,
        "y": 724.0822144245761
      },
      "dragging": false
    },
    {
      "id": "worker_2",
      "position": {
        "x": -340.633688785548,
        "y": 6.071750945216479
      },
      "type": "customNode",
      "data": {
        "id": "worker_2",
        "label": "Worker",
        "version": 2,
        "name": "worker",
        "type": "Worker",
        "baseClasses": [
          "Worker"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Worker Name",
            "name": "workerName",
            "type": "string",
            "placeholder": "Worker",
            "id": "worker_2-input-workerName-string"
          },
          {
            "label": "Worker Prompt",
            "name": "workerPrompt",
            "type": "string",
            "rows": 4,
            "default": "You are a research assistant who can search for up-to-date info using search engine.",
            "id": "worker_2-input-workerPrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "worker_2-input-promptValues-json"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "id": "worker_2-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "optional": true,
            "id": "worker_2-input-tools-Tool"
          },
          {
            "label": "Supervisor",
            "name": "supervisor",
            "type": "Supervisor",
            "id": "worker_2-input-supervisor-Supervisor"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "optional": true,
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat. If not specified, supervisor's model will be used",
            "id": "worker_2-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "workerName": "FormattingReviewAgent",
          "workerPrompt": "You are the Formatting Review Agent in a document review workflow. Use the RAG retriever tool to access relevant Australian Government styling guidelines. Review the given document's formatting, including fonts, spacing, margins, and overall layout. Provide concise, specific suggestions for improvements based on the retrieved guidelines. Do not make any direct modifications to the document. Format your suggestions as a numbered list, with each item containing the issue, location, suggestion, and guideline reference. Send your list of suggestions to the Supervisor Agent.write very concise suggeetion. not more than 5",
          "tools": [
            "{{retrieverTool_1.data.instance}}"
          ],
          "supervisor": "{{supervisor_0.data.instance}}",
          "model": "{{chatTogetherAI_0.data.instance}}",
          "promptValues": "",
          "maxIterations": "15"
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 724,
      "selected": false,
      "positionAbsolute": {
        "x": -340.633688785548,
        "y": 6.071750945216479
      },
      "dragging": false
    },
    {
      "id": "openAIEmbeddings_1",
      "position": {
        "x": -145.85491159970962,
        "y": 837.0467928512595
      },
      "type": "customNode",
      "data": {
        "id": "openAIEmbeddings_1",
        "label": "OpenAI Embeddings",
        "version": 4,
        "name": "openAIEmbeddings",
        "type": "OpenAIEmbeddings",
        "baseClasses": [
          "OpenAIEmbeddings",
          "Embeddings"
        ],
        "category": "Embeddings",
        "description": "OpenAI API to generate embeddings for a given text",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "openAIEmbeddings_1-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "default": "text-embedding-ada-002",
            "id": "openAIEmbeddings_1-input-modelName-asyncOptions"
          },
          {
            "label": "Strip New Lines",
            "name": "stripNewLines",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_1-input-stripNewLines-boolean"
          },
          {
            "label": "Batch Size",
            "name": "batchSize",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_1-input-batchSize-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_1-input-timeout-number"
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_1-input-basepath-string"
          },
          {
            "label": "Dimensions",
            "name": "dimensions",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_1-input-dimensions-number"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "modelName": "text-embedding-3-small",
          "stripNewLines": "",
          "batchSize": "",
          "timeout": "",
          "basepath": "",
          "dimensions": ""
        },
        "outputAnchors": [
          {
            "id": "openAIEmbeddings_1-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "name": "openAIEmbeddings",
            "label": "OpenAIEmbeddings",
            "description": "OpenAI API to generate embeddings for a given text",
            "type": "OpenAIEmbeddings | Embeddings"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 427,
      "selected": false,
      "positionAbsolute": {
        "x": -145.85491159970962,
        "y": 837.0467928512595
      },
      "dragging": false
    },
    {
      "id": "retrieverTool_1",
      "position": {
        "x": -710.2936073648425,
        "y": 776.4781375917604
      },
      "type": "customNode",
      "data": {
        "id": "retrieverTool_1",
        "label": "Retriever Tool",
        "version": 2,
        "name": "retrieverTool",
        "type": "RetrieverTool",
        "baseClasses": [
          "RetrieverTool",
          "DynamicTool",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Use a retriever as allowed tool for agent",
        "inputParams": [
          {
            "label": "Retriever Name",
            "name": "name",
            "type": "string",
            "placeholder": "search_state_of_union",
            "id": "retrieverTool_1-input-name-string"
          },
          {
            "label": "Retriever Description",
            "name": "description",
            "type": "string",
            "description": "When should agent uses to retrieve documents",
            "rows": 3,
            "placeholder": "Searches and returns documents regarding the state-of-the-union.",
            "id": "retrieverTool_1-input-description-string"
          },
          {
            "label": "Return Source Documents",
            "name": "returnSourceDocuments",
            "type": "boolean",
            "optional": true,
            "id": "retrieverTool_1-input-returnSourceDocuments-boolean"
          }
        ],
        "inputAnchors": [
          {
            "label": "Retriever",
            "name": "retriever",
            "type": "BaseRetriever",
            "id": "retrieverTool_1-input-retriever-BaseRetriever"
          }
        ],
        "inputs": {
          "name": "DesignRetriever",
          "description": "The DesignRetriever provides guidelines for structuring and designing content for better readability and communication. Use it to suggest improvements to the design, but do not modify the content.\n",
          "retriever": "{{memoryVectorStore_1.data.instance}}",
          "returnSourceDocuments": ""
        },
        "outputAnchors": [
          {
            "id": "retrieverTool_1-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable",
            "name": "retrieverTool",
            "label": "RetrieverTool",
            "description": "Use a retriever as allowed tool for agent",
            "type": "RetrieverTool | DynamicTool | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 605,
      "selected": false,
      "positionAbsolute": {
        "x": -710.2936073648425,
        "y": 776.4781375917604
      },
      "dragging": false
    },
    {
      "id": "recursiveCharacterTextSplitter_1",
      "position": {
        "x": -746.9999075918316,
        "y": 1487.3212523652394
      },
      "type": "customNode",
      "data": {
        "id": "recursiveCharacterTextSplitter_1",
        "label": "Recursive Character Text Splitter",
        "version": 2,
        "name": "recursiveCharacterTextSplitter",
        "type": "RecursiveCharacterTextSplitter",
        "baseClasses": [
          "RecursiveCharacterTextSplitter",
          "TextSplitter",
          "BaseDocumentTransformer",
          "Runnable"
        ],
        "category": "Text Splitters",
        "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
        "inputParams": [
          {
            "label": "Chunk Size",
            "name": "chunkSize",
            "type": "number",
            "description": "Number of characters in each chunk. Default is 1000.",
            "default": 1000,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_1-input-chunkSize-number"
          },
          {
            "label": "Chunk Overlap",
            "name": "chunkOverlap",
            "type": "number",
            "description": "Number of characters to overlap between chunks. Default is 200.",
            "default": 200,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_1-input-chunkOverlap-number"
          },
          {
            "label": "Custom Separators",
            "name": "separators",
            "type": "string",
            "rows": 4,
            "description": "Array of custom separators to determine when to split the text, will override the default separators",
            "placeholder": "[\"|\", \"##\", \">\", \"-\"]",
            "additionalParams": true,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_1-input-separators-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "chunkSize": "1000",
          "chunkOverlap": "",
          "separators": ""
        },
        "outputAnchors": [
          {
            "id": "recursiveCharacterTextSplitter_1-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
            "name": "recursiveCharacterTextSplitter",
            "label": "RecursiveCharacterTextSplitter",
            "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
            "type": "RecursiveCharacterTextSplitter | TextSplitter | BaseDocumentTransformer | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 433,
      "selected": false,
      "positionAbsolute": {
        "x": -746.9999075918316,
        "y": 1487.3212523652394
      },
      "dragging": false
    },
    {
      "id": "pdfFile_1",
      "position": {
        "x": -278.4213566754735,
        "y": 1453.7427518913626
      },
      "type": "customNode",
      "data": {
        "id": "pdfFile_1",
        "label": "Pdf File",
        "version": 1,
        "name": "pdfFile",
        "type": "Document",
        "baseClasses": [
          "Document"
        ],
        "category": "Document Loaders",
        "description": "Load data from PDF files",
        "inputParams": [
          {
            "label": "Pdf File",
            "name": "pdfFile",
            "type": "file",
            "fileType": ".pdf",
            "id": "pdfFile_1-input-pdfFile-file"
          },
          {
            "label": "Usage",
            "name": "usage",
            "type": "options",
            "options": [
              {
                "label": "One document per page",
                "name": "perPage"
              },
              {
                "label": "One document per file",
                "name": "perFile"
              }
            ],
            "default": "perPage",
            "id": "pdfFile_1-input-usage-options"
          },
          {
            "label": "Use Legacy Build",
            "name": "legacyBuild",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_1-input-legacyBuild-boolean"
          },
          {
            "label": "Additional Metadata",
            "name": "metadata",
            "type": "json",
            "description": "Additional metadata to be added to the extracted documents",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_1-input-metadata-json"
          },
          {
            "label": "Omit Metadata Keys",
            "name": "omitMetadataKeys",
            "type": "string",
            "rows": 4,
            "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
            "placeholder": "key1, key2, key3.nestedKey1",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_1-input-omitMetadataKeys-string"
          }
        ],
        "inputAnchors": [
          {
            "label": "Text Splitter",
            "name": "textSplitter",
            "type": "TextSplitter",
            "optional": true,
            "id": "pdfFile_1-input-textSplitter-TextSplitter"
          }
        ],
        "inputs": {
          "textSplitter": "{{recursiveCharacterTextSplitter_1.data.instance}}",
          "usage": "perPage",
          "legacyBuild": "",
          "metadata": "",
          "omitMetadataKeys": ""
        },
        "outputAnchors": [
          {
            "id": "pdfFile_1-output-pdfFile-Document",
            "name": "pdfFile",
            "label": "Document",
            "description": "Load data from PDF files",
            "type": "Document"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 512,
      "selected": false,
      "positionAbsolute": {
        "x": -278.4213566754735,
        "y": 1453.7427518913626
      },
      "dragging": false
    },
    {
      "id": "memoryVectorStore_1",
      "position": {
        "x": 118.00912110130082,
        "y": 1497.7266246327981
      },
      "type": "customNode",
      "data": {
        "id": "memoryVectorStore_1",
        "label": "In-Memory Vector Store",
        "version": 1,
        "name": "memoryVectorStore",
        "type": "Memory",
        "baseClasses": [
          "Memory",
          "VectorStoreRetriever",
          "BaseRetriever"
        ],
        "category": "Vector Stores",
        "description": "In-memory vectorstore that stores embeddings and does an exact, linear search for the most similar embeddings.",
        "inputParams": [
          {
            "label": "Top K",
            "name": "topK",
            "description": "Number of top results to fetch. Default to 4",
            "placeholder": "4",
            "type": "number",
            "optional": true,
            "id": "memoryVectorStore_1-input-topK-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Document",
            "name": "document",
            "type": "Document",
            "list": true,
            "optional": true,
            "id": "memoryVectorStore_1-input-document-Document"
          },
          {
            "label": "Embeddings",
            "name": "embeddings",
            "type": "Embeddings",
            "id": "memoryVectorStore_1-input-embeddings-Embeddings"
          }
        ],
        "inputs": {
          "document": [
            "{{pdfFile_1.data.instance}}"
          ],
          "embeddings": "{{openAIEmbeddings_1.data.instance}}",
          "topK": "3"
        },
        "outputAnchors": [
          {
            "name": "output",
            "label": "Output",
            "type": "options",
            "description": "",
            "options": [
              {
                "id": "memoryVectorStore_1-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
                "name": "retriever",
                "label": "Memory Retriever",
                "description": "",
                "type": "Memory | VectorStoreRetriever | BaseRetriever"
              },
              {
                "id": "memoryVectorStore_1-output-vectorStore-Memory|VectorStore",
                "name": "vectorStore",
                "label": "Memory Vector Store",
                "description": "",
                "type": "Memory | VectorStore"
              }
            ],
            "default": "retriever"
          }
        ],
        "outputs": {
          "output": "retriever"
        },
        "selected": false
      },
      "width": 300,
      "height": 409,
      "selected": false,
      "positionAbsolute": {
        "x": 118.00912110130082,
        "y": 1497.7266246327981
      },
      "dragging": false
    },
    {
      "id": "worker_4",
      "position": {
        "x": 1332.381849820056,
        "y": -107.65027380189076
      },
      "type": "customNode",
      "data": {
        "id": "worker_4",
        "label": "Worker",
        "version": 2,
        "name": "worker",
        "type": "Worker",
        "baseClasses": [
          "Worker"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Worker Name",
            "name": "workerName",
            "type": "string",
            "placeholder": "Worker",
            "id": "worker_4-input-workerName-string"
          },
          {
            "label": "Worker Prompt",
            "name": "workerPrompt",
            "type": "string",
            "rows": 4,
            "default": "You are a research assistant who can search for up-to-date info using search engine.",
            "id": "worker_4-input-workerPrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "worker_4-input-promptValues-json"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "id": "worker_4-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "optional": true,
            "id": "worker_4-input-tools-Tool"
          },
          {
            "label": "Supervisor",
            "name": "supervisor",
            "type": "Supervisor",
            "id": "worker_4-input-supervisor-Supervisor"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "optional": true,
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat. If not specified, supervisor's model will be used",
            "id": "worker_4-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "workerName": "GrammarAgent",
          "workerPrompt": "You are the GrammarAgent in a document review workflow. Use the RAG retriever tool to access relevant Australian Government styling guidelines. Review the given document for content issues such as grammar, spelling, clarity, and appropriateness. Provide concise, specific suggestions for improvements based on the retrieved guidelines. Do not make any direct modifications to the document. Format your suggestions as a numbered list, with each item containing the issue, location, suggestion, and guideline reference. Send your list of suggestions to the Supervisor Agent.",
          "tools": [
            "{{retrieverTool_3.data.instance}}"
          ],
          "supervisor": "{{supervisor_0.data.instance}}",
          "model": "{{chatTogetherAI_0.data.instance}}",
          "promptValues": "",
          "maxIterations": "15"
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 724,
      "selected": false,
      "positionAbsolute": {
        "x": 1332.381849820056,
        "y": -107.65027380189076
      },
      "dragging": false
    },
    {
      "id": "worker_5",
      "position": {
        "x": 2774.930844804168,
        "y": -19.86931058093296
      },
      "type": "customNode",
      "data": {
        "id": "worker_5",
        "label": "Worker",
        "version": 2,
        "name": "worker",
        "type": "Worker",
        "baseClasses": [
          "Worker"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Worker Name",
            "name": "workerName",
            "type": "string",
            "placeholder": "Worker",
            "id": "worker_5-input-workerName-string"
          },
          {
            "label": "Worker Prompt",
            "name": "workerPrompt",
            "type": "string",
            "rows": 4,
            "default": "You are a research assistant who can search for up-to-date info using search engine.",
            "id": "worker_5-input-workerPrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "worker_5-input-promptValues-json"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "id": "worker_5-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "optional": true,
            "id": "worker_5-input-tools-Tool"
          },
          {
            "label": "Supervisor",
            "name": "supervisor",
            "type": "Supervisor",
            "id": "worker_5-input-supervisor-Supervisor"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "optional": true,
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat. If not specified, supervisor's model will be used",
            "id": "worker_5-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "workerName": "StructureReviewAgent",
          "workerPrompt": "You are the Structure Review Agent in a document review workflow. Use the RAG retriever tool to access relevant Australian Government styling guidelines. Review the given document's overall organization, including headings, sections, and logical flow. Provide concise, specific suggestions for improvements based on the retrieved guidelines. Do not make any direct modifications to the document. Format your suggestions as a numbered list, with each item containing the issue, location, suggestion, and guideline reference. Send your list of suggestions to the Supervisor Agent.write very concise suggeetion. not more than 5",
          "tools": [
            "{{retrieverTool_4.data.instance}}"
          ],
          "supervisor": "{{supervisor_0.data.instance}}",
          "model": "{{chatTogetherAI_0.data.instance}}",
          "promptValues": "",
          "maxIterations": "15"
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 724,
      "selected": false,
      "positionAbsolute": {
        "x": 2774.930844804168,
        "y": -19.86931058093296
      },
      "dragging": false
    },
    {
      "id": "worker_6",
      "position": {
        "x": 4180.336058882602,
        "y": -78.2066861627975
      },
      "type": "customNode",
      "data": {
        "id": "worker_6",
        "label": "Worker",
        "version": 2,
        "name": "worker",
        "type": "Worker",
        "baseClasses": [
          "Worker"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Worker Name",
            "name": "workerName",
            "type": "string",
            "placeholder": "Worker",
            "id": "worker_6-input-workerName-string"
          },
          {
            "label": "Worker Prompt",
            "name": "workerPrompt",
            "type": "string",
            "rows": 4,
            "default": "You are a research assistant who can search for up-to-date info using search engine.",
            "id": "worker_6-input-workerPrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "worker_6-input-promptValues-json"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "id": "worker_6-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "optional": true,
            "id": "worker_6-input-tools-Tool"
          },
          {
            "label": "Supervisor",
            "name": "supervisor",
            "type": "Supervisor",
            "id": "worker_6-input-supervisor-Supervisor"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "optional": true,
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat. If not specified, supervisor's model will be used",
            "id": "worker_6-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "workerName": "CitationReviewAgent",
          "workerPrompt": "You are the Citation Review Agent in a document review workflow. Use the RAG retriever tool to access relevant Australian Government styling guidelines. Review the given document's citations and references, ensuring they adhere to the specified style guide. Provide concise, specific suggestions for improvements based on the retrieved guidelines. Do not make any direct modifications to the document. Format your suggestions as a numbered list, with each item containing the issue, location, suggestion, and guideline reference. Send your list of suggestions to the Supervisor Agent.",
          "tools": [
            "{{retrieverTool_5.data.instance}}"
          ],
          "supervisor": "{{supervisor_0.data.instance}}",
          "model": "{{chatTogetherAI_0.data.instance}}",
          "promptValues": "",
          "maxIterations": "15"
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 724,
      "selected": false,
      "positionAbsolute": {
        "x": 4180.336058882602,
        "y": -78.2066861627975
      },
      "dragging": false
    },
    {
      "id": "retrieverTool_3",
      "position": {
        "x": 963.5794964379195,
        "y": 771.8055727500765
      },
      "type": "customNode",
      "data": {
        "id": "retrieverTool_3",
        "label": "Retriever Tool",
        "version": 2,
        "name": "retrieverTool",
        "type": "RetrieverTool",
        "baseClasses": [
          "RetrieverTool",
          "DynamicTool",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Use a retriever as allowed tool for agent",
        "inputParams": [
          {
            "label": "Retriever Name",
            "name": "name",
            "type": "string",
            "placeholder": "search_state_of_union",
            "id": "retrieverTool_3-input-name-string"
          },
          {
            "label": "Retriever Description",
            "name": "description",
            "type": "string",
            "description": "When should agent uses to retrieve documents",
            "rows": 3,
            "placeholder": "Searches and returns documents regarding the state-of-the-union.",
            "id": "retrieverTool_3-input-description-string"
          },
          {
            "label": "Return Source Documents",
            "name": "returnSourceDocuments",
            "type": "boolean",
            "optional": true,
            "id": "retrieverTool_3-input-returnSourceDocuments-boolean"
          }
        ],
        "inputAnchors": [
          {
            "label": "Retriever",
            "name": "retriever",
            "type": "BaseRetriever",
            "id": "retrieverTool_3-input-retriever-BaseRetriever"
          }
        ],
        "inputs": {
          "name": "GrammarRetriever",
          "description": "The GrammarRetriever provides guidelines on Australian English grammar, spelling, and punctuation. Use it to suggest corrections for any errors found in the document, but do not modify the content.",
          "retriever": "{{memoryVectorStore_2.data.instance}}",
          "returnSourceDocuments": ""
        },
        "outputAnchors": [
          {
            "id": "retrieverTool_3-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable",
            "name": "retrieverTool",
            "label": "RetrieverTool",
            "description": "Use a retriever as allowed tool for agent",
            "type": "RetrieverTool | DynamicTool | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 605,
      "selected": false,
      "positionAbsolute": {
        "x": 963.5794964379195,
        "y": 771.8055727500765
      },
      "dragging": false
    },
    {
      "id": "retrieverTool_4",
      "position": {
        "x": 2400.823528850739,
        "y": 767.5243744345431
      },
      "type": "customNode",
      "data": {
        "id": "retrieverTool_4",
        "label": "Retriever Tool",
        "version": 2,
        "name": "retrieverTool",
        "type": "RetrieverTool",
        "baseClasses": [
          "RetrieverTool",
          "DynamicTool",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Use a retriever as allowed tool for agent",
        "inputParams": [
          {
            "label": "Retriever Name",
            "name": "name",
            "type": "string",
            "placeholder": "search_state_of_union",
            "id": "retrieverTool_4-input-name-string"
          },
          {
            "label": "Retriever Description",
            "name": "description",
            "type": "string",
            "description": "When should agent uses to retrieve documents",
            "rows": 3,
            "placeholder": "Searches and returns documents regarding the state-of-the-union.",
            "id": "retrieverTool_4-input-description-string"
          },
          {
            "label": "Return Source Documents",
            "name": "returnSourceDocuments",
            "type": "boolean",
            "optional": true,
            "id": "retrieverTool_4-input-returnSourceDocuments-boolean"
          }
        ],
        "inputAnchors": [
          {
            "label": "Retriever",
            "name": "retriever",
            "type": "BaseRetriever",
            "id": "retrieverTool_4-input-retriever-BaseRetriever"
          }
        ],
        "inputs": {
          "name": "StructureRetriever",
          "description": "The StructureRetriever provides guidelines on organizing and structuring content. Use it to suggest improvements to the document's layout and flow, but do not modify the content.",
          "retriever": "{{memoryVectorStore_3.data.instance}}",
          "returnSourceDocuments": ""
        },
        "outputAnchors": [
          {
            "id": "retrieverTool_4-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable",
            "name": "retrieverTool",
            "label": "RetrieverTool",
            "description": "Use a retriever as allowed tool for agent",
            "type": "RetrieverTool | DynamicTool | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 605,
      "selected": false,
      "positionAbsolute": {
        "x": 2400.823528850739,
        "y": 767.5243744345431
      },
      "dragging": false
    },
    {
      "id": "retrieverTool_5",
      "position": {
        "x": 3606.161886244738,
        "y": 762.1714508571134
      },
      "type": "customNode",
      "data": {
        "id": "retrieverTool_5",
        "label": "Retriever Tool",
        "version": 2,
        "name": "retrieverTool",
        "type": "RetrieverTool",
        "baseClasses": [
          "RetrieverTool",
          "DynamicTool",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Use a retriever as allowed tool for agent",
        "inputParams": [
          {
            "label": "Retriever Name",
            "name": "name",
            "type": "string",
            "placeholder": "search_state_of_union",
            "id": "retrieverTool_5-input-name-string"
          },
          {
            "label": "Retriever Description",
            "name": "description",
            "type": "string",
            "description": "When should agent uses to retrieve documents",
            "rows": 3,
            "placeholder": "Searches and returns documents regarding the state-of-the-union.",
            "id": "retrieverTool_5-input-description-string"
          },
          {
            "label": "Return Source Documents",
            "name": "returnSourceDocuments",
            "type": "boolean",
            "optional": true,
            "id": "retrieverTool_5-input-returnSourceDocuments-boolean"
          }
        ],
        "inputAnchors": [
          {
            "label": "Retriever",
            "name": "retriever",
            "type": "BaseRetriever",
            "id": "retrieverTool_5-input-retriever-BaseRetriever"
          }
        ],
        "inputs": {
          "name": "ReferencingRetriever",
          "description": "The ReferencingRetriever provides guidelines for formatting references and citations according to the Australian Government Style Manual. Use it to suggest improvements to references, but do not modify the content.\n",
          "retriever": "{{memoryVectorStore_4.data.instance}}",
          "returnSourceDocuments": ""
        },
        "outputAnchors": [
          {
            "id": "retrieverTool_5-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable",
            "name": "retrieverTool",
            "label": "RetrieverTool",
            "description": "Use a retriever as allowed tool for agent",
            "type": "RetrieverTool | DynamicTool | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 605,
      "selected": false,
      "positionAbsolute": {
        "x": 3606.161886244738,
        "y": 762.1714508571134
      },
      "dragging": false
    },
    {
      "id": "openAIEmbeddings_2",
      "position": {
        "x": 4073.3151122142735,
        "y": 808.4334193819658
      },
      "type": "customNode",
      "data": {
        "id": "openAIEmbeddings_2",
        "label": "OpenAI Embeddings",
        "version": 4,
        "name": "openAIEmbeddings",
        "type": "OpenAIEmbeddings",
        "baseClasses": [
          "OpenAIEmbeddings",
          "Embeddings"
        ],
        "category": "Embeddings",
        "description": "OpenAI API to generate embeddings for a given text",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "openAIEmbeddings_2-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "default": "text-embedding-ada-002",
            "id": "openAIEmbeddings_2-input-modelName-asyncOptions"
          },
          {
            "label": "Strip New Lines",
            "name": "stripNewLines",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_2-input-stripNewLines-boolean"
          },
          {
            "label": "Batch Size",
            "name": "batchSize",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_2-input-batchSize-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_2-input-timeout-number"
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_2-input-basepath-string"
          },
          {
            "label": "Dimensions",
            "name": "dimensions",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_2-input-dimensions-number"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "modelName": "text-embedding-3-small",
          "stripNewLines": "",
          "batchSize": "",
          "timeout": "",
          "basepath": "",
          "dimensions": ""
        },
        "outputAnchors": [
          {
            "id": "openAIEmbeddings_2-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "name": "openAIEmbeddings",
            "label": "OpenAIEmbeddings",
            "description": "OpenAI API to generate embeddings for a given text",
            "type": "OpenAIEmbeddings | Embeddings"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 427,
      "selected": false,
      "positionAbsolute": {
        "x": 4073.3151122142735,
        "y": 808.4334193819658
      },
      "dragging": false
    },
    {
      "id": "openAIEmbeddings_3",
      "position": {
        "x": 2882.9987758916527,
        "y": 833.470121167598
      },
      "type": "customNode",
      "data": {
        "id": "openAIEmbeddings_3",
        "label": "OpenAI Embeddings",
        "version": 4,
        "name": "openAIEmbeddings",
        "type": "OpenAIEmbeddings",
        "baseClasses": [
          "OpenAIEmbeddings",
          "Embeddings"
        ],
        "category": "Embeddings",
        "description": "OpenAI API to generate embeddings for a given text",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "openAIEmbeddings_3-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "default": "text-embedding-ada-002",
            "id": "openAIEmbeddings_3-input-modelName-asyncOptions"
          },
          {
            "label": "Strip New Lines",
            "name": "stripNewLines",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_3-input-stripNewLines-boolean"
          },
          {
            "label": "Batch Size",
            "name": "batchSize",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_3-input-batchSize-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_3-input-timeout-number"
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_3-input-basepath-string"
          },
          {
            "label": "Dimensions",
            "name": "dimensions",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_3-input-dimensions-number"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "modelName": "text-embedding-3-small",
          "stripNewLines": "",
          "batchSize": "",
          "timeout": "",
          "basepath": "",
          "dimensions": ""
        },
        "outputAnchors": [
          {
            "id": "openAIEmbeddings_3-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "name": "openAIEmbeddings",
            "label": "OpenAIEmbeddings",
            "description": "OpenAI API to generate embeddings for a given text",
            "type": "OpenAIEmbeddings | Embeddings"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 427,
      "selected": false,
      "positionAbsolute": {
        "x": 2882.9987758916527,
        "y": 833.470121167598
      },
      "dragging": false
    },
    {
      "id": "openAIEmbeddings_4",
      "position": {
        "x": 1484.6357444637595,
        "y": 839.6431682607373
      },
      "type": "customNode",
      "data": {
        "id": "openAIEmbeddings_4",
        "label": "OpenAI Embeddings",
        "version": 4,
        "name": "openAIEmbeddings",
        "type": "OpenAIEmbeddings",
        "baseClasses": [
          "OpenAIEmbeddings",
          "Embeddings"
        ],
        "category": "Embeddings",
        "description": "OpenAI API to generate embeddings for a given text",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "openAIApi"
            ],
            "id": "openAIEmbeddings_4-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "asyncOptions",
            "loadMethod": "listModels",
            "default": "text-embedding-ada-002",
            "id": "openAIEmbeddings_4-input-modelName-asyncOptions"
          },
          {
            "label": "Strip New Lines",
            "name": "stripNewLines",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_4-input-stripNewLines-boolean"
          },
          {
            "label": "Batch Size",
            "name": "batchSize",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_4-input-batchSize-number"
          },
          {
            "label": "Timeout",
            "name": "timeout",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_4-input-timeout-number"
          },
          {
            "label": "BasePath",
            "name": "basepath",
            "type": "string",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_4-input-basepath-string"
          },
          {
            "label": "Dimensions",
            "name": "dimensions",
            "type": "number",
            "optional": true,
            "additionalParams": true,
            "id": "openAIEmbeddings_4-input-dimensions-number"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "modelName": "text-embedding-3-small",
          "stripNewLines": "",
          "batchSize": "",
          "timeout": "",
          "basepath": "",
          "dimensions": ""
        },
        "outputAnchors": [
          {
            "id": "openAIEmbeddings_4-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
            "name": "openAIEmbeddings",
            "label": "OpenAIEmbeddings",
            "description": "OpenAI API to generate embeddings for a given text",
            "type": "OpenAIEmbeddings | Embeddings"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 427,
      "selected": false,
      "positionAbsolute": {
        "x": 1484.6357444637595,
        "y": 839.6431682607373
      },
      "dragging": false
    },
    {
      "id": "memoryVectorStore_2",
      "position": {
        "x": 1658.9673881893887,
        "y": 1565.6833866223708
      },
      "type": "customNode",
      "data": {
        "id": "memoryVectorStore_2",
        "label": "In-Memory Vector Store",
        "version": 1,
        "name": "memoryVectorStore",
        "type": "Memory",
        "baseClasses": [
          "Memory",
          "VectorStoreRetriever",
          "BaseRetriever"
        ],
        "category": "Vector Stores",
        "description": "In-memory vectorstore that stores embeddings and does an exact, linear search for the most similar embeddings.",
        "inputParams": [
          {
            "label": "Top K",
            "name": "topK",
            "description": "Number of top results to fetch. Default to 4",
            "placeholder": "4",
            "type": "number",
            "optional": true,
            "id": "memoryVectorStore_2-input-topK-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Document",
            "name": "document",
            "type": "Document",
            "list": true,
            "optional": true,
            "id": "memoryVectorStore_2-input-document-Document"
          },
          {
            "label": "Embeddings",
            "name": "embeddings",
            "type": "Embeddings",
            "id": "memoryVectorStore_2-input-embeddings-Embeddings"
          }
        ],
        "inputs": {
          "document": [
            "{{pdfFile_2.data.instance}}"
          ],
          "embeddings": "{{openAIEmbeddings_4.data.instance}}",
          "topK": "6"
        },
        "outputAnchors": [
          {
            "name": "output",
            "label": "Output",
            "type": "options",
            "description": "",
            "options": [
              {
                "id": "memoryVectorStore_2-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
                "name": "retriever",
                "label": "Memory Retriever",
                "description": "",
                "type": "Memory | VectorStoreRetriever | BaseRetriever"
              },
              {
                "id": "memoryVectorStore_2-output-vectorStore-Memory|VectorStore",
                "name": "vectorStore",
                "label": "Memory Vector Store",
                "description": "",
                "type": "Memory | VectorStore"
              }
            ],
            "default": "retriever"
          }
        ],
        "outputs": {
          "output": "retriever"
        },
        "selected": false
      },
      "width": 300,
      "height": 409,
      "selected": false,
      "positionAbsolute": {
        "x": 1658.9673881893887,
        "y": 1565.6833866223708
      },
      "dragging": false
    },
    {
      "id": "memoryVectorStore_3",
      "position": {
        "x": 2910.8024774709897,
        "y": 1562.106714938709
      },
      "type": "customNode",
      "data": {
        "id": "memoryVectorStore_3",
        "label": "In-Memory Vector Store",
        "version": 1,
        "name": "memoryVectorStore",
        "type": "Memory",
        "baseClasses": [
          "Memory",
          "VectorStoreRetriever",
          "BaseRetriever"
        ],
        "category": "Vector Stores",
        "description": "In-memory vectorstore that stores embeddings and does an exact, linear search for the most similar embeddings.",
        "inputParams": [
          {
            "label": "Top K",
            "name": "topK",
            "description": "Number of top results to fetch. Default to 4",
            "placeholder": "4",
            "type": "number",
            "optional": true,
            "id": "memoryVectorStore_3-input-topK-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Document",
            "name": "document",
            "type": "Document",
            "list": true,
            "optional": true,
            "id": "memoryVectorStore_3-input-document-Document"
          },
          {
            "label": "Embeddings",
            "name": "embeddings",
            "type": "Embeddings",
            "id": "memoryVectorStore_3-input-embeddings-Embeddings"
          }
        ],
        "inputs": {
          "document": [
            "{{pdfFile_3.data.instance}}"
          ],
          "embeddings": "{{openAIEmbeddings_3.data.instance}}",
          "topK": "3"
        },
        "outputAnchors": [
          {
            "name": "output",
            "label": "Output",
            "type": "options",
            "description": "",
            "options": [
              {
                "id": "memoryVectorStore_3-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
                "name": "retriever",
                "label": "Memory Retriever",
                "description": "",
                "type": "Memory | VectorStoreRetriever | BaseRetriever"
              },
              {
                "id": "memoryVectorStore_3-output-vectorStore-Memory|VectorStore",
                "name": "vectorStore",
                "label": "Memory Vector Store",
                "description": "",
                "type": "Memory | VectorStore"
              }
            ],
            "default": "retriever"
          }
        ],
        "outputs": {
          "output": "retriever"
        },
        "selected": false
      },
      "width": 300,
      "height": 409,
      "selected": false,
      "positionAbsolute": {
        "x": 2910.8024774709897,
        "y": 1562.106714938709
      },
      "dragging": false
    },
    {
      "id": "memoryVectorStore_4",
      "position": {
        "x": 4193.671643067166,
        "y": 1530.886078555963
      },
      "type": "customNode",
      "data": {
        "id": "memoryVectorStore_4",
        "label": "In-Memory Vector Store",
        "version": 1,
        "name": "memoryVectorStore",
        "type": "Memory",
        "baseClasses": [
          "Memory",
          "VectorStoreRetriever",
          "BaseRetriever"
        ],
        "category": "Vector Stores",
        "description": "In-memory vectorstore that stores embeddings and does an exact, linear search for the most similar embeddings.",
        "inputParams": [
          {
            "label": "Top K",
            "name": "topK",
            "description": "Number of top results to fetch. Default to 4",
            "placeholder": "4",
            "type": "number",
            "optional": true,
            "id": "memoryVectorStore_4-input-topK-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Document",
            "name": "document",
            "type": "Document",
            "list": true,
            "optional": true,
            "id": "memoryVectorStore_4-input-document-Document"
          },
          {
            "label": "Embeddings",
            "name": "embeddings",
            "type": "Embeddings",
            "id": "memoryVectorStore_4-input-embeddings-Embeddings"
          }
        ],
        "inputs": {
          "document": [
            "{{pdfFile_4.data.instance}}"
          ],
          "embeddings": "{{openAIEmbeddings_2.data.instance}}",
          "topK": "3"
        },
        "outputAnchors": [
          {
            "name": "output",
            "label": "Output",
            "type": "options",
            "description": "",
            "options": [
              {
                "id": "memoryVectorStore_4-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
                "name": "retriever",
                "label": "Memory Retriever",
                "description": "",
                "type": "Memory | VectorStoreRetriever | BaseRetriever"
              },
              {
                "id": "memoryVectorStore_4-output-vectorStore-Memory|VectorStore",
                "name": "vectorStore",
                "label": "Memory Vector Store",
                "description": "",
                "type": "Memory | VectorStore"
              }
            ],
            "default": "retriever"
          }
        ],
        "outputs": {
          "output": "retriever"
        },
        "selected": false
      },
      "width": 300,
      "height": 409,
      "selected": false,
      "positionAbsolute": {
        "x": 4193.671643067166,
        "y": 1530.886078555963
      },
      "dragging": false
    },
    {
      "id": "pdfFile_2",
      "position": {
        "x": 1223.3669172180928,
        "y": 1532.9028039712473
      },
      "type": "customNode",
      "data": {
        "id": "pdfFile_2",
        "label": "Pdf File",
        "version": 1,
        "name": "pdfFile",
        "type": "Document",
        "baseClasses": [
          "Document"
        ],
        "category": "Document Loaders",
        "description": "Load data from PDF files",
        "inputParams": [
          {
            "label": "Pdf File",
            "name": "pdfFile",
            "type": "file",
            "fileType": ".pdf",
            "id": "pdfFile_2-input-pdfFile-file"
          },
          {
            "label": "Usage",
            "name": "usage",
            "type": "options",
            "options": [
              {
                "label": "One document per page",
                "name": "perPage"
              },
              {
                "label": "One document per file",
                "name": "perFile"
              }
            ],
            "default": "perPage",
            "id": "pdfFile_2-input-usage-options"
          },
          {
            "label": "Use Legacy Build",
            "name": "legacyBuild",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_2-input-legacyBuild-boolean"
          },
          {
            "label": "Additional Metadata",
            "name": "metadata",
            "type": "json",
            "description": "Additional metadata to be added to the extracted documents",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_2-input-metadata-json"
          },
          {
            "label": "Omit Metadata Keys",
            "name": "omitMetadataKeys",
            "type": "string",
            "rows": 4,
            "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
            "placeholder": "key1, key2, key3.nestedKey1",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_2-input-omitMetadataKeys-string"
          }
        ],
        "inputAnchors": [
          {
            "label": "Text Splitter",
            "name": "textSplitter",
            "type": "TextSplitter",
            "optional": true,
            "id": "pdfFile_2-input-textSplitter-TextSplitter"
          }
        ],
        "inputs": {
          "textSplitter": "{{recursiveCharacterTextSplitter_4.data.instance}}",
          "usage": "perPage",
          "legacyBuild": "",
          "metadata": "",
          "omitMetadataKeys": ""
        },
        "outputAnchors": [
          {
            "id": "pdfFile_2-output-pdfFile-Document",
            "name": "pdfFile",
            "label": "Document",
            "description": "Load data from PDF files",
            "type": "Document"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 512,
      "selected": false,
      "positionAbsolute": {
        "x": 1223.3669172180928,
        "y": 1532.9028039712473
      },
      "dragging": false
    },
    {
      "id": "pdfFile_3",
      "position": {
        "x": 2564.4454032654794,
        "y": 1533.9986971292697
      },
      "type": "customNode",
      "data": {
        "id": "pdfFile_3",
        "label": "Pdf File",
        "version": 1,
        "name": "pdfFile",
        "type": "Document",
        "baseClasses": [
          "Document"
        ],
        "category": "Document Loaders",
        "description": "Load data from PDF files",
        "inputParams": [
          {
            "label": "Pdf File",
            "name": "pdfFile",
            "type": "file",
            "fileType": ".pdf",
            "id": "pdfFile_3-input-pdfFile-file"
          },
          {
            "label": "Usage",
            "name": "usage",
            "type": "options",
            "options": [
              {
                "label": "One document per page",
                "name": "perPage"
              },
              {
                "label": "One document per file",
                "name": "perFile"
              }
            ],
            "default": "perPage",
            "id": "pdfFile_3-input-usage-options"
          },
          {
            "label": "Use Legacy Build",
            "name": "legacyBuild",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_3-input-legacyBuild-boolean"
          },
          {
            "label": "Additional Metadata",
            "name": "metadata",
            "type": "json",
            "description": "Additional metadata to be added to the extracted documents",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_3-input-metadata-json"
          },
          {
            "label": "Omit Metadata Keys",
            "name": "omitMetadataKeys",
            "type": "string",
            "rows": 4,
            "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
            "placeholder": "key1, key2, key3.nestedKey1",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_3-input-omitMetadataKeys-string"
          }
        ],
        "inputAnchors": [
          {
            "label": "Text Splitter",
            "name": "textSplitter",
            "type": "TextSplitter",
            "optional": true,
            "id": "pdfFile_3-input-textSplitter-TextSplitter"
          }
        ],
        "inputs": {
          "textSplitter": "{{recursiveCharacterTextSplitter_3.data.instance}}",
          "usage": "perPage",
          "legacyBuild": "",
          "metadata": "",
          "omitMetadataKeys": ""
        },
        "outputAnchors": [
          {
            "id": "pdfFile_3-output-pdfFile-Document",
            "name": "pdfFile",
            "label": "Document",
            "description": "Load data from PDF files",
            "type": "Document"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 512,
      "selected": false,
      "positionAbsolute": {
        "x": 2564.4454032654794,
        "y": 1533.9986971292697
      },
      "dragging": false
    },
    {
      "id": "pdfFile_4",
      "position": {
        "x": 3774.1095348496488,
        "y": 1488.8868506092845
      },
      "type": "customNode",
      "data": {
        "id": "pdfFile_4",
        "label": "Pdf File",
        "version": 1,
        "name": "pdfFile",
        "type": "Document",
        "baseClasses": [
          "Document"
        ],
        "category": "Document Loaders",
        "description": "Load data from PDF files",
        "inputParams": [
          {
            "label": "Pdf File",
            "name": "pdfFile",
            "type": "file",
            "fileType": ".pdf",
            "id": "pdfFile_4-input-pdfFile-file"
          },
          {
            "label": "Usage",
            "name": "usage",
            "type": "options",
            "options": [
              {
                "label": "One document per page",
                "name": "perPage"
              },
              {
                "label": "One document per file",
                "name": "perFile"
              }
            ],
            "default": "perPage",
            "id": "pdfFile_4-input-usage-options"
          },
          {
            "label": "Use Legacy Build",
            "name": "legacyBuild",
            "type": "boolean",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_4-input-legacyBuild-boolean"
          },
          {
            "label": "Additional Metadata",
            "name": "metadata",
            "type": "json",
            "description": "Additional metadata to be added to the extracted documents",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_4-input-metadata-json"
          },
          {
            "label": "Omit Metadata Keys",
            "name": "omitMetadataKeys",
            "type": "string",
            "rows": 4,
            "description": "Each document loader comes with a default set of metadata keys that are extracted from the document. You can use this field to omit some of the default metadata keys. The value should be a list of keys, seperated by comma. Use * to omit all metadata keys execept the ones you specify in the Additional Metadata field",
            "placeholder": "key1, key2, key3.nestedKey1",
            "optional": true,
            "additionalParams": true,
            "id": "pdfFile_4-input-omitMetadataKeys-string"
          }
        ],
        "inputAnchors": [
          {
            "label": "Text Splitter",
            "name": "textSplitter",
            "type": "TextSplitter",
            "optional": true,
            "id": "pdfFile_4-input-textSplitter-TextSplitter"
          }
        ],
        "inputs": {
          "textSplitter": "{{recursiveCharacterTextSplitter_2.data.instance}}",
          "usage": "perPage",
          "legacyBuild": "",
          "metadata": "",
          "omitMetadataKeys": ""
        },
        "outputAnchors": [
          {
            "id": "pdfFile_4-output-pdfFile-Document",
            "name": "pdfFile",
            "label": "Document",
            "description": "Load data from PDF files",
            "type": "Document"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 512,
      "selected": false,
      "positionAbsolute": {
        "x": 3774.1095348496488,
        "y": 1488.8868506092845
      },
      "dragging": false
    },
    {
      "id": "recursiveCharacterTextSplitter_2",
      "position": {
        "x": 3396.0571635389583,
        "y": 1547.6863356985255
      },
      "type": "customNode",
      "data": {
        "id": "recursiveCharacterTextSplitter_2",
        "label": "Recursive Character Text Splitter",
        "version": 2,
        "name": "recursiveCharacterTextSplitter",
        "type": "RecursiveCharacterTextSplitter",
        "baseClasses": [
          "RecursiveCharacterTextSplitter",
          "TextSplitter",
          "BaseDocumentTransformer",
          "Runnable"
        ],
        "category": "Text Splitters",
        "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
        "inputParams": [
          {
            "label": "Chunk Size",
            "name": "chunkSize",
            "type": "number",
            "description": "Number of characters in each chunk. Default is 1000.",
            "default": 1000,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_2-input-chunkSize-number"
          },
          {
            "label": "Chunk Overlap",
            "name": "chunkOverlap",
            "type": "number",
            "description": "Number of characters to overlap between chunks. Default is 200.",
            "default": 200,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_2-input-chunkOverlap-number"
          },
          {
            "label": "Custom Separators",
            "name": "separators",
            "type": "string",
            "rows": 4,
            "description": "Array of custom separators to determine when to split the text, will override the default separators",
            "placeholder": "[\"|\", \"##\", \">\", \"-\"]",
            "additionalParams": true,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_2-input-separators-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "chunkSize": "1000",
          "chunkOverlap": "",
          "separators": ""
        },
        "outputAnchors": [
          {
            "id": "recursiveCharacterTextSplitter_2-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
            "name": "recursiveCharacterTextSplitter",
            "label": "RecursiveCharacterTextSplitter",
            "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
            "type": "RecursiveCharacterTextSplitter | TextSplitter | BaseDocumentTransformer | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 433,
      "selected": false,
      "positionAbsolute": {
        "x": 3396.0571635389583,
        "y": 1547.6863356985255
      },
      "dragging": false
    },
    {
      "id": "recursiveCharacterTextSplitter_3",
      "position": {
        "x": 2201.7378134055402,
        "y": 1583.453052535143
      },
      "type": "customNode",
      "data": {
        "id": "recursiveCharacterTextSplitter_3",
        "label": "Recursive Character Text Splitter",
        "version": 2,
        "name": "recursiveCharacterTextSplitter",
        "type": "RecursiveCharacterTextSplitter",
        "baseClasses": [
          "RecursiveCharacterTextSplitter",
          "TextSplitter",
          "BaseDocumentTransformer",
          "Runnable"
        ],
        "category": "Text Splitters",
        "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
        "inputParams": [
          {
            "label": "Chunk Size",
            "name": "chunkSize",
            "type": "number",
            "description": "Number of characters in each chunk. Default is 1000.",
            "default": 1000,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_3-input-chunkSize-number"
          },
          {
            "label": "Chunk Overlap",
            "name": "chunkOverlap",
            "type": "number",
            "description": "Number of characters to overlap between chunks. Default is 200.",
            "default": 200,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_3-input-chunkOverlap-number"
          },
          {
            "label": "Custom Separators",
            "name": "separators",
            "type": "string",
            "rows": 4,
            "description": "Array of custom separators to determine when to split the text, will override the default separators",
            "placeholder": "[\"|\", \"##\", \">\", \"-\"]",
            "additionalParams": true,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_3-input-separators-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "chunkSize": "1000",
          "chunkOverlap": "",
          "separators": ""
        },
        "outputAnchors": [
          {
            "id": "recursiveCharacterTextSplitter_3-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
            "name": "recursiveCharacterTextSplitter",
            "label": "RecursiveCharacterTextSplitter",
            "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
            "type": "RecursiveCharacterTextSplitter | TextSplitter | BaseDocumentTransformer | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 433,
      "selected": false,
      "positionAbsolute": {
        "x": 2201.7378134055402,
        "y": 1583.453052535143
      },
      "dragging": false
    },
    {
      "id": "recursiveCharacterTextSplitter_4",
      "position": {
        "x": 847.6797275492048,
        "y": 1563.2623109169517
      },
      "type": "customNode",
      "data": {
        "id": "recursiveCharacterTextSplitter_4",
        "label": "Recursive Character Text Splitter",
        "version": 2,
        "name": "recursiveCharacterTextSplitter",
        "type": "RecursiveCharacterTextSplitter",
        "baseClasses": [
          "RecursiveCharacterTextSplitter",
          "TextSplitter",
          "BaseDocumentTransformer",
          "Runnable"
        ],
        "category": "Text Splitters",
        "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
        "inputParams": [
          {
            "label": "Chunk Size",
            "name": "chunkSize",
            "type": "number",
            "description": "Number of characters in each chunk. Default is 1000.",
            "default": 1000,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_4-input-chunkSize-number"
          },
          {
            "label": "Chunk Overlap",
            "name": "chunkOverlap",
            "type": "number",
            "description": "Number of characters to overlap between chunks. Default is 200.",
            "default": 200,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_4-input-chunkOverlap-number"
          },
          {
            "label": "Custom Separators",
            "name": "separators",
            "type": "string",
            "rows": 4,
            "description": "Array of custom separators to determine when to split the text, will override the default separators",
            "placeholder": "[\"|\", \"##\", \">\", \"-\"]",
            "additionalParams": true,
            "optional": true,
            "id": "recursiveCharacterTextSplitter_4-input-separators-string"
          }
        ],
        "inputAnchors": [],
        "inputs": {
          "chunkSize": "1000",
          "chunkOverlap": "",
          "separators": ""
        },
        "outputAnchors": [
          {
            "id": "recursiveCharacterTextSplitter_4-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
            "name": "recursiveCharacterTextSplitter",
            "label": "RecursiveCharacterTextSplitter",
            "description": "Split documents recursively by different characters - starting with \"\\n\\n\", then \"\\n\", then \" \"",
            "type": "RecursiveCharacterTextSplitter | TextSplitter | BaseDocumentTransformer | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 433,
      "selected": false,
      "positionAbsolute": {
        "x": 847.6797275492048,
        "y": 1563.2623109169517
      },
      "dragging": false
    },
    {
      "id": "chatTogetherAI_0",
      "position": {
        "x": -2389.2219453892185,
        "y": -911.4511031853539
      },
      "type": "customNode",
      "data": {
        "id": "chatTogetherAI_0",
        "label": "ChatTogetherAI",
        "version": 1,
        "name": "chatTogetherAI",
        "type": "ChatTogetherAI",
        "baseClasses": [
          "ChatTogetherAI",
          "ChatOpenAI",
          "BaseChatModel",
          "BaseLanguageModel",
          "Runnable"
        ],
        "category": "Chat Models",
        "description": "Wrapper around TogetherAI large language models",
        "inputParams": [
          {
            "label": "Connect Credential",
            "name": "credential",
            "type": "credential",
            "credentialNames": [
              "togetherAIApi"
            ],
            "id": "chatTogetherAI_0-input-credential-credential"
          },
          {
            "label": "Model Name",
            "name": "modelName",
            "type": "string",
            "placeholder": "mixtral-8x7b-32768",
            "description": "Refer to <a target=\"_blank\" href=\"https://docs.together.ai/docs/inference-models\">models</a> page",
            "id": "chatTogetherAI_0-input-modelName-string"
          },
          {
            "label": "Temperature",
            "name": "temperature",
            "type": "number",
            "step": 0.1,
            "default": 0.9,
            "optional": true,
            "id": "chatTogetherAI_0-input-temperature-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Cache",
            "name": "cache",
            "type": "BaseCache",
            "optional": true,
            "id": "chatTogetherAI_0-input-cache-BaseCache"
          }
        ],
        "inputs": {
          "cache": "",
          "modelName": "meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo",
          "temperature": 0.9
        },
        "outputAnchors": [
          {
            "id": "chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
            "name": "chatTogetherAI",
            "label": "ChatTogetherAI",
            "description": "Wrapper around TogetherAI large language models",
            "type": "ChatTogetherAI | ChatOpenAI | BaseChatModel | BaseLanguageModel | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 526,
      "selected": false,
      "positionAbsolute": {
        "x": -2389.2219453892185,
        "y": -911.4511031853539
      },
      "dragging": false
    },
    {
      "id": "webBrowser_0",
      "position": {
        "x": -2058.7958612137163,
        "y": -1608.0652954809193
      },
      "type": "customNode",
      "data": {
        "id": "webBrowser_0",
        "label": "Web Browser",
        "version": 1,
        "name": "webBrowser",
        "type": "WebBrowser",
        "baseClasses": [
          "WebBrowser",
          "Tool",
          "StructuredTool",
          "Runnable"
        ],
        "category": "Tools",
        "description": "Gives agent the ability to visit a website and extract information",
        "inputParams": [],
        "inputAnchors": [
          {
            "label": "Language Model",
            "name": "model",
            "type": "BaseLanguageModel",
            "id": "webBrowser_0-input-model-BaseLanguageModel"
          },
          {
            "label": "Embeddings",
            "name": "embeddings",
            "type": "Embeddings",
            "id": "webBrowser_0-input-embeddings-Embeddings"
          }
        ],
        "inputs": {
          "model": "{{chatTogetherAI_0.data.instance}}",
          "embeddings": "{{openAIEmbeddings_0.data.instance}}"
        },
        "outputAnchors": [
          {
            "id": "webBrowser_0-output-webBrowser-WebBrowser|Tool|StructuredTool|Runnable",
            "name": "webBrowser",
            "label": "WebBrowser",
            "description": "Gives agent the ability to visit a website and extract information",
            "type": "WebBrowser | Tool | StructuredTool | Runnable"
          }
        ],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 283,
      "selected": false,
      "positionAbsolute": {
        "x": -2058.7958612137163,
        "y": -1608.0652954809193
      },
      "dragging": false
    },
    {
      "id": "worker_7",
      "position": {
        "x": -842.7644393540234,
        "y": -2106.8582120480796
      },
      "type": "customNode",
      "data": {
        "id": "worker_7",
        "label": "Worker",
        "version": 2,
        "name": "worker",
        "type": "Worker",
        "baseClasses": [
          "Worker"
        ],
        "category": "Multi Agents",
        "inputParams": [
          {
            "label": "Worker Name",
            "name": "workerName",
            "type": "string",
            "placeholder": "Worker",
            "id": "worker_7-input-workerName-string"
          },
          {
            "label": "Worker Prompt",
            "name": "workerPrompt",
            "type": "string",
            "rows": 4,
            "default": "You are a research assistant who can search for up-to-date info using search engine.",
            "id": "worker_7-input-workerPrompt-string"
          },
          {
            "label": "Format Prompt Values",
            "name": "promptValues",
            "type": "json",
            "optional": true,
            "acceptVariable": true,
            "list": true,
            "id": "worker_7-input-promptValues-json"
          },
          {
            "label": "Max Iterations",
            "name": "maxIterations",
            "type": "number",
            "optional": true,
            "id": "worker_7-input-maxIterations-number"
          }
        ],
        "inputAnchors": [
          {
            "label": "Tools",
            "name": "tools",
            "type": "Tool",
            "list": true,
            "optional": true,
            "id": "worker_7-input-tools-Tool"
          },
          {
            "label": "Supervisor",
            "name": "supervisor",
            "type": "Supervisor",
            "id": "worker_7-input-supervisor-Supervisor"
          },
          {
            "label": "Tool Calling Chat Model",
            "name": "model",
            "type": "BaseChatModel",
            "optional": true,
            "description": "Only compatible with models that are capable of function calling: ChatOpenAI, ChatMistral, ChatAnthropic, ChatGoogleGenerativeAI, ChatVertexAI, GroqChat. If not specified, supervisor's model will be used",
            "id": "worker_7-input-model-BaseChatModel"
          }
        ],
        "inputs": {
          "workerName": "crawlworker",
          "workerPrompt": "you task is to use web browser tool to etract the information and simplify and present to the user.",
          "tools": [
            "{{webBrowser_0.data.instance}}"
          ],
          "supervisor": "{{supervisor_0.data.instance}}",
          "model": "{{chatTogetherAI_0.data.instance}}",
          "promptValues": "",
          "maxIterations": ""
        },
        "outputAnchors": [],
        "outputs": {},
        "selected": false
      },
      "width": 300,
      "height": 724,
      "selected": false,
      "dragging": false,
      "positionAbsolute": {
        "x": -842.7644393540234,
        "y": -2106.8582120480796
      }
    }
  ],
  "edges": [
    {
      "source": "agentMemory_0",
      "sourceHandle": "agentMemory_0-output-agentMemory-AgentMemory|BaseCheckpointSaver",
      "target": "supervisor_0",
      "targetHandle": "supervisor_0-input-agentMemory-BaseCheckpointSaver",
      "type": "buttonedge",
      "id": "agentMemory_0-agentMemory_0-output-agentMemory-AgentMemory|BaseCheckpointSaver-supervisor_0-supervisor_0-input-agentMemory-BaseCheckpointSaver"
    },
    {
      "source": "supervisor_0",
      "sourceHandle": "supervisor_0-output-supervisor-Supervisor",
      "target": "worker_0",
      "targetHandle": "worker_0-input-supervisor-Supervisor",
      "type": "buttonedge",
      "id": "supervisor_0-supervisor_0-output-supervisor-Supervisor-worker_0-worker_0-input-supervisor-Supervisor"
    },
    {
      "source": "recursiveCharacterTextSplitter_0",
      "sourceHandle": "recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
      "target": "pdfFile_0",
      "targetHandle": "pdfFile_0-input-textSplitter-TextSplitter",
      "type": "buttonedge",
      "id": "recursiveCharacterTextSplitter_0-recursiveCharacterTextSplitter_0-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable-pdfFile_0-pdfFile_0-input-textSplitter-TextSplitter"
    },
    {
      "source": "pdfFile_0",
      "sourceHandle": "pdfFile_0-output-pdfFile-Document",
      "target": "memoryVectorStore_0",
      "targetHandle": "memoryVectorStore_0-input-document-Document",
      "type": "buttonedge",
      "id": "pdfFile_0-pdfFile_0-output-pdfFile-Document-memoryVectorStore_0-memoryVectorStore_0-input-document-Document"
    },
    {
      "source": "openAIEmbeddings_0",
      "sourceHandle": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
      "target": "memoryVectorStore_0",
      "targetHandle": "memoryVectorStore_0-input-embeddings-Embeddings",
      "type": "buttonedge",
      "id": "openAIEmbeddings_0-openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-memoryVectorStore_0-memoryVectorStore_0-input-embeddings-Embeddings"
    },
    {
      "source": "supervisor_0",
      "sourceHandle": "supervisor_0-output-supervisor-Supervisor",
      "target": "worker_1",
      "targetHandle": "worker_1-input-supervisor-Supervisor",
      "type": "buttonedge",
      "id": "supervisor_0-supervisor_0-output-supervisor-Supervisor-worker_1-worker_1-input-supervisor-Supervisor"
    },
    {
      "source": "memoryVectorStore_0",
      "sourceHandle": "memoryVectorStore_0-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
      "target": "retrieverTool_0",
      "targetHandle": "retrieverTool_0-input-retriever-BaseRetriever",
      "type": "buttonedge",
      "id": "memoryVectorStore_0-memoryVectorStore_0-output-retriever-Memory|VectorStoreRetriever|BaseRetriever-retrieverTool_0-retrieverTool_0-input-retriever-BaseRetriever"
    },
    {
      "source": "retrieverTool_0",
      "sourceHandle": "retrieverTool_0-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable",
      "target": "worker_0",
      "targetHandle": "worker_0-input-tools-Tool",
      "type": "buttonedge",
      "id": "retrieverTool_0-retrieverTool_0-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable-worker_0-worker_0-input-tools-Tool"
    },
    {
      "source": "recursiveCharacterTextSplitter_1",
      "sourceHandle": "recursiveCharacterTextSplitter_1-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
      "target": "pdfFile_1",
      "targetHandle": "pdfFile_1-input-textSplitter-TextSplitter",
      "type": "buttonedge",
      "id": "recursiveCharacterTextSplitter_1-recursiveCharacterTextSplitter_1-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable-pdfFile_1-pdfFile_1-input-textSplitter-TextSplitter"
    },
    {
      "source": "pdfFile_1",
      "sourceHandle": "pdfFile_1-output-pdfFile-Document",
      "target": "memoryVectorStore_1",
      "targetHandle": "memoryVectorStore_1-input-document-Document",
      "type": "buttonedge",
      "id": "pdfFile_1-pdfFile_1-output-pdfFile-Document-memoryVectorStore_1-memoryVectorStore_1-input-document-Document"
    },
    {
      "source": "openAIEmbeddings_1",
      "sourceHandle": "openAIEmbeddings_1-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
      "target": "memoryVectorStore_1",
      "targetHandle": "memoryVectorStore_1-input-embeddings-Embeddings",
      "type": "buttonedge",
      "id": "openAIEmbeddings_1-openAIEmbeddings_1-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-memoryVectorStore_1-memoryVectorStore_1-input-embeddings-Embeddings"
    },
    {
      "source": "memoryVectorStore_1",
      "sourceHandle": "memoryVectorStore_1-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
      "target": "retrieverTool_1",
      "targetHandle": "retrieverTool_1-input-retriever-BaseRetriever",
      "type": "buttonedge",
      "id": "memoryVectorStore_1-memoryVectorStore_1-output-retriever-Memory|VectorStoreRetriever|BaseRetriever-retrieverTool_1-retrieverTool_1-input-retriever-BaseRetriever"
    },
    {
      "source": "retrieverTool_1",
      "sourceHandle": "retrieverTool_1-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable",
      "target": "worker_2",
      "targetHandle": "worker_2-input-tools-Tool",
      "type": "buttonedge",
      "id": "retrieverTool_1-retrieverTool_1-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable-worker_2-worker_2-input-tools-Tool"
    },
    {
      "source": "supervisor_0",
      "sourceHandle": "supervisor_0-output-supervisor-Supervisor",
      "target": "worker_2",
      "targetHandle": "worker_2-input-supervisor-Supervisor",
      "type": "buttonedge",
      "id": "supervisor_0-supervisor_0-output-supervisor-Supervisor-worker_2-worker_2-input-supervisor-Supervisor"
    },
    {
      "source": "recursiveCharacterTextSplitter_4",
      "sourceHandle": "recursiveCharacterTextSplitter_4-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
      "target": "pdfFile_2",
      "targetHandle": "pdfFile_2-input-textSplitter-TextSplitter",
      "type": "buttonedge",
      "id": "recursiveCharacterTextSplitter_4-recursiveCharacterTextSplitter_4-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable-pdfFile_2-pdfFile_2-input-textSplitter-TextSplitter"
    },
    {
      "source": "pdfFile_2",
      "sourceHandle": "pdfFile_2-output-pdfFile-Document",
      "target": "memoryVectorStore_2",
      "targetHandle": "memoryVectorStore_2-input-document-Document",
      "type": "buttonedge",
      "id": "pdfFile_2-pdfFile_2-output-pdfFile-Document-memoryVectorStore_2-memoryVectorStore_2-input-document-Document"
    },
    {
      "source": "pdfFile_3",
      "sourceHandle": "pdfFile_3-output-pdfFile-Document",
      "target": "memoryVectorStore_3",
      "targetHandle": "memoryVectorStore_3-input-document-Document",
      "type": "buttonedge",
      "id": "pdfFile_3-pdfFile_3-output-pdfFile-Document-memoryVectorStore_3-memoryVectorStore_3-input-document-Document"
    },
    {
      "source": "recursiveCharacterTextSplitter_3",
      "sourceHandle": "recursiveCharacterTextSplitter_3-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
      "target": "pdfFile_3",
      "targetHandle": "pdfFile_3-input-textSplitter-TextSplitter",
      "type": "buttonedge",
      "id": "recursiveCharacterTextSplitter_3-recursiveCharacterTextSplitter_3-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable-pdfFile_3-pdfFile_3-input-textSplitter-TextSplitter"
    },
    {
      "source": "recursiveCharacterTextSplitter_2",
      "sourceHandle": "recursiveCharacterTextSplitter_2-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable",
      "target": "pdfFile_4",
      "targetHandle": "pdfFile_4-input-textSplitter-TextSplitter",
      "type": "buttonedge",
      "id": "recursiveCharacterTextSplitter_2-recursiveCharacterTextSplitter_2-output-recursiveCharacterTextSplitter-RecursiveCharacterTextSplitter|TextSplitter|BaseDocumentTransformer|Runnable-pdfFile_4-pdfFile_4-input-textSplitter-TextSplitter"
    },
    {
      "source": "pdfFile_4",
      "sourceHandle": "pdfFile_4-output-pdfFile-Document",
      "target": "memoryVectorStore_4",
      "targetHandle": "memoryVectorStore_4-input-document-Document",
      "type": "buttonedge",
      "id": "pdfFile_4-pdfFile_4-output-pdfFile-Document-memoryVectorStore_4-memoryVectorStore_4-input-document-Document"
    },
    {
      "source": "retrieverTool_3",
      "sourceHandle": "retrieverTool_3-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable",
      "target": "worker_4",
      "targetHandle": "worker_4-input-tools-Tool",
      "type": "buttonedge",
      "id": "retrieverTool_3-retrieverTool_3-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable-worker_4-worker_4-input-tools-Tool"
    },
    {
      "source": "memoryVectorStore_2",
      "sourceHandle": "memoryVectorStore_2-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
      "target": "retrieverTool_3",
      "targetHandle": "retrieverTool_3-input-retriever-BaseRetriever",
      "type": "buttonedge",
      "id": "memoryVectorStore_2-memoryVectorStore_2-output-retriever-Memory|VectorStoreRetriever|BaseRetriever-retrieverTool_3-retrieverTool_3-input-retriever-BaseRetriever"
    },
    {
      "source": "openAIEmbeddings_4",
      "sourceHandle": "openAIEmbeddings_4-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
      "target": "memoryVectorStore_2",
      "targetHandle": "memoryVectorStore_2-input-embeddings-Embeddings",
      "type": "buttonedge",
      "id": "openAIEmbeddings_4-openAIEmbeddings_4-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-memoryVectorStore_2-memoryVectorStore_2-input-embeddings-Embeddings"
    },
    {
      "source": "supervisor_0",
      "sourceHandle": "supervisor_0-output-supervisor-Supervisor",
      "target": "worker_4",
      "targetHandle": "worker_4-input-supervisor-Supervisor",
      "type": "buttonedge",
      "id": "supervisor_0-supervisor_0-output-supervisor-Supervisor-worker_4-worker_4-input-supervisor-Supervisor"
    },
    {
      "source": "supervisor_0",
      "sourceHandle": "supervisor_0-output-supervisor-Supervisor",
      "target": "worker_5",
      "targetHandle": "worker_5-input-supervisor-Supervisor",
      "type": "buttonedge",
      "id": "supervisor_0-supervisor_0-output-supervisor-Supervisor-worker_5-worker_5-input-supervisor-Supervisor"
    },
    {
      "source": "memoryVectorStore_3",
      "sourceHandle": "memoryVectorStore_3-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
      "target": "retrieverTool_4",
      "targetHandle": "retrieverTool_4-input-retriever-BaseRetriever",
      "type": "buttonedge",
      "id": "memoryVectorStore_3-memoryVectorStore_3-output-retriever-Memory|VectorStoreRetriever|BaseRetriever-retrieverTool_4-retrieverTool_4-input-retriever-BaseRetriever"
    },
    {
      "source": "retrieverTool_4",
      "sourceHandle": "retrieverTool_4-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable",
      "target": "worker_5",
      "targetHandle": "worker_5-input-tools-Tool",
      "type": "buttonedge",
      "id": "retrieverTool_4-retrieverTool_4-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable-worker_5-worker_5-input-tools-Tool"
    },
    {
      "source": "openAIEmbeddings_3",
      "sourceHandle": "openAIEmbeddings_3-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
      "target": "memoryVectorStore_3",
      "targetHandle": "memoryVectorStore_3-input-embeddings-Embeddings",
      "type": "buttonedge",
      "id": "openAIEmbeddings_3-openAIEmbeddings_3-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-memoryVectorStore_3-memoryVectorStore_3-input-embeddings-Embeddings"
    },
    {
      "source": "openAIEmbeddings_2",
      "sourceHandle": "openAIEmbeddings_2-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
      "target": "memoryVectorStore_4",
      "targetHandle": "memoryVectorStore_4-input-embeddings-Embeddings",
      "type": "buttonedge",
      "id": "openAIEmbeddings_2-openAIEmbeddings_2-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-memoryVectorStore_4-memoryVectorStore_4-input-embeddings-Embeddings"
    },
    {
      "source": "retrieverTool_5",
      "sourceHandle": "retrieverTool_5-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable",
      "target": "worker_6",
      "targetHandle": "worker_6-input-tools-Tool",
      "type": "buttonedge",
      "id": "retrieverTool_5-retrieverTool_5-output-retrieverTool-RetrieverTool|DynamicTool|Tool|StructuredTool|Runnable-worker_6-worker_6-input-tools-Tool"
    },
    {
      "source": "memoryVectorStore_4",
      "sourceHandle": "memoryVectorStore_4-output-retriever-Memory|VectorStoreRetriever|BaseRetriever",
      "target": "retrieverTool_5",
      "targetHandle": "retrieverTool_5-input-retriever-BaseRetriever",
      "type": "buttonedge",
      "id": "memoryVectorStore_4-memoryVectorStore_4-output-retriever-Memory|VectorStoreRetriever|BaseRetriever-retrieverTool_5-retrieverTool_5-input-retriever-BaseRetriever"
    },
    {
      "source": "supervisor_0",
      "sourceHandle": "supervisor_0-output-supervisor-Supervisor",
      "target": "worker_6",
      "targetHandle": "worker_6-input-supervisor-Supervisor",
      "type": "buttonedge",
      "id": "supervisor_0-supervisor_0-output-supervisor-Supervisor-worker_6-worker_6-input-supervisor-Supervisor"
    },
    {
      "source": "chatTogetherAI_0",
      "sourceHandle": "chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "worker_0",
      "targetHandle": "worker_0-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatTogetherAI_0-chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-worker_0-worker_0-input-model-BaseChatModel"
    },
    {
      "source": "chatTogetherAI_0",
      "sourceHandle": "chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "worker_2",
      "targetHandle": "worker_2-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatTogetherAI_0-chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-worker_2-worker_2-input-model-BaseChatModel"
    },
    {
      "source": "chatTogetherAI_0",
      "sourceHandle": "chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "worker_4",
      "targetHandle": "worker_4-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatTogetherAI_0-chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-worker_4-worker_4-input-model-BaseChatModel"
    },
    {
      "source": "chatTogetherAI_0",
      "sourceHandle": "chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "worker_5",
      "targetHandle": "worker_5-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatTogetherAI_0-chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-worker_5-worker_5-input-model-BaseChatModel"
    },
    {
      "source": "chatTogetherAI_0",
      "sourceHandle": "chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "worker_1",
      "targetHandle": "worker_1-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatTogetherAI_0-chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-worker_1-worker_1-input-model-BaseChatModel"
    },
    {
      "source": "chatTogetherAI_0",
      "sourceHandle": "chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "worker_6",
      "targetHandle": "worker_6-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatTogetherAI_0-chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-worker_6-worker_6-input-model-BaseChatModel"
    },
    {
      "source": "chatTogetherAI_0",
      "sourceHandle": "chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "supervisor_0",
      "targetHandle": "supervisor_0-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatTogetherAI_0-chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-supervisor_0-supervisor_0-input-model-BaseChatModel"
    },
    {
      "source": "chatTogetherAI_0",
      "sourceHandle": "chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "webBrowser_0",
      "targetHandle": "webBrowser_0-input-model-BaseLanguageModel",
      "type": "buttonedge",
      "id": "chatTogetherAI_0-chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-webBrowser_0-webBrowser_0-input-model-BaseLanguageModel"
    },
    {
      "source": "openAIEmbeddings_0",
      "sourceHandle": "openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings",
      "target": "webBrowser_0",
      "targetHandle": "webBrowser_0-input-embeddings-Embeddings",
      "type": "buttonedge",
      "id": "openAIEmbeddings_0-openAIEmbeddings_0-output-openAIEmbeddings-OpenAIEmbeddings|Embeddings-webBrowser_0-webBrowser_0-input-embeddings-Embeddings"
    },
    {
      "source": "webBrowser_0",
      "sourceHandle": "webBrowser_0-output-webBrowser-WebBrowser|Tool|StructuredTool|Runnable",
      "target": "worker_7",
      "targetHandle": "worker_7-input-tools-Tool",
      "type": "buttonedge",
      "id": "webBrowser_0-webBrowser_0-output-webBrowser-WebBrowser|Tool|StructuredTool|Runnable-worker_7-worker_7-input-tools-Tool"
    },
    {
      "source": "supervisor_0",
      "sourceHandle": "supervisor_0-output-supervisor-Supervisor",
      "target": "worker_7",
      "targetHandle": "worker_7-input-supervisor-Supervisor",
      "type": "buttonedge",
      "id": "supervisor_0-supervisor_0-output-supervisor-Supervisor-worker_7-worker_7-input-supervisor-Supervisor"
    },
    {
      "source": "chatTogetherAI_0",
      "sourceHandle": "chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable",
      "target": "worker_7",
      "targetHandle": "worker_7-input-model-BaseChatModel",
      "type": "buttonedge",
      "id": "chatTogetherAI_0-chatTogetherAI_0-output-chatTogetherAI-ChatTogetherAI|ChatOpenAI|BaseChatModel|BaseLanguageModel|Runnable-worker_7-worker_7-input-model-BaseChatModel"
    }
  ]
}